def label = "mypod-${UUID.randomUUID().toString()}"
podTemplate(label: label, 
  serviceAccount: 'jenkins',
  containers: [
    containerTemplate(
      name: 'docker', 
      image: 'docker:17.12.1-ce',
      ttyEnabled: true, 
      command: 'cat',
      envVars: [
        envVar(key: 'DOCKER_HOST', value: 'tcp://dind:2375')
      ]
    ),
    containerTemplate(
      name: 'helm', 
      image: 'lachlanevenson/k8s-helm:v2.8.1', 
      ttyEnabled: true, 
      command: 'cat'
    )
  ],
  volumes: [
    emptyDirVolume(mountPath: '/var/lib/docker', memory: false)
  ]) {

    node(label) {
      
      container('jnlp') {
        stage('Checkout code') {
          sh 'hostname'
        }
      }


      // Checkout code    
      // container('jnlp') {
      //   stage('Checkout code') {
      //     git credentialsId: 'desdrury-https-github', url: 'https://github.com/desdrury/kubernetes-in-7-days.git'
      //     env.commit = sh returnStdout: true, script: 'git rev-parse HEAD'
      //   }
      // }

      // // Build and push image
      // container('docker') {
      //   stage('Build image') {
      //     env.version = sh returnStdout: true, script: 'cat build.number'            
      //     withEnv(['VERSION=' + env.version.trim(), 'COMMIT=' + env.commit.trim()]) {
      //       sh """
      //         docker build \
      //           -t docker-registry.do.citopro.com/kube7days/documentation:${VERSION}.${COMMIT}  \
      //           -t docker-registry.do.citopro.com/kube7days/documentation:latest \
      //           .
      //       """
      //     }
      //   }

      //   stage('Push image') {
      //     withDockerRegistry([credentialsId: 'docker-user', url: 'https://docker-registry.do.citopro.com']) {
      //       withEnv(['VERSION=' + env.VERSION.trim(), 'COMMIT=' + env.COMMIT.trim()]) {
      //         sh "docker push docker-registry.do.citopro.com/kube7days/documentation:${VERSION}.${COMMIT}"
      //         sh 'docker push docker-registry.do.citopro.com/kube7days/documentation:latest'
      //       }
      //     }

      //   }
      // }

      // // Deploy Helm Chart
      // container('helm') {
      //   stage('Deploy Helm Chart') {
      //     dir('charts/kube7days') {
      //       env.chartVersion = sh returnStdout: true, script: 'grep version Chart.yaml | sed "s/version: //"'
      //     }
      //     withCredentials([usernamePassword(credentialsId: 'chart-museum', passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
      //       sh 'helm repo add citopro "https://${USER}:${PASSWORD}@chartmuseum.do.citopro.com"'
      //     }
      //     sh 'helm repo update'
      //     withEnv(['CHART_VERSION=' + env.chartVersion.trim(), 'VERSION=' + env.version.trim(), 'COMMIT=' + env.commit.trim()]) {
      //       output = sh returnStdout: true, script: """
      //         helm upgrade --install kube7days \
      //           --namespace production \
      //           --set image.tag=${VERSION}.${COMMIT} \
      //           citopro/kube7days --version ${CHART_VERSION}
      //       """

      //       slackSend color: 'good', message: "```" + output + "```"
      //     }
      //   }
      // }

    }
}
